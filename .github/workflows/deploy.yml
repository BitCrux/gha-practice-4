name: Deployment
on:
  push:
    branches:
      - main
      - dev
env:  # define environment variables on workflow level (environment variable is available for all jobs unless overwritten by a job)
  MONGODB_DB_NAME: gha-demo # inject value "gha-demo" in code data/database.js
jobs:
  test:
    env:  # it is reasonable for testing to use a specific test database with own credentials (different from production db); it makes sense to define this env vars on job level.
      MONGODB_CLUSTER_ADDRESS: cluster0.15pwqcc.mongodb.net # example value; inject value in code data/database.js
      MONGODB_USERNAME: temp # inject value in code data/database.js
      MONGODB_PASSWORD: 147 # inject value in code data/database.js
      PORT: 8080 # inject value in code playwright.config.js
    environment: testing
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-deps-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT # ensure that the webserver is started to run the tests; use the env var PORT (unix -> $PORT; windows -> $env:PORT)
      - name: Run tests
        run: npm test
      - name: Output information
        run: | # use env context to access value of env var MONGODB_USERNAME
          echo "MONGODB_USERNAME: ${{ env.MONGODB_USERNAME }}"  
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: | # env var MONGODB_USERNAME is not accessible because it is not defined on workflow level; MONGODB_DB_NAME is accessible and defined on workflow level.
          echo "MONGODB_USERNAME: ${{ env.MONGODB_USERNAME }}" 
          echo "MONGODB_USERNAME: $MONGODB_DB_NAME"
